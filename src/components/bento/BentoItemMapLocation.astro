---
import BentoItemMapLocationContent from './BentoItemMapLocation'
import { MAPTILER_API_KEY } from 'astro:env/server'
import { LocationIcon } from '@/components/icons/BentoIcons'
---

<div class="relative h-full w-full">
  <BentoItemMapLocationContent apiKey={MAPTILER_API_KEY} client:only="react" />
  
  <div class="absolute inset-0 p-6">
    {/* Location Badge */}
    <div class="absolute top-0 left-0">
      <div class="flex items-center gap-2 bg-[#090D13] border border-[#2A3441] rounded-full py-1.5 px-3">
        <LocationIcon className="size-5 text-white" />
        <span class="text-sm font-medium text-white">Location</span>
      </div>
    </div>

    {/* Zoom Controls */}
    <div class="absolute bottom-0 left-0" id="zoom-out-container">
      <button 
        id="zoom-out"
        class="flex items-center justify-center w-8 h-8 bg-[#090D13] border border-[#2A3441] rounded-full text-white hover:bg-[#1E293B] transition-colors"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="size-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="5" y1="12" x2="19" y2="12"></line>
        </svg>
      </button>
    </div>
    <div class="absolute bottom-0 right-0" id="zoom-in-container">
      <button 
        id="zoom-in"
        class="flex items-center justify-center w-8 h-8 bg-[#090D13] border border-[#2A3441] rounded-full text-white hover:bg-[#1E293B] transition-colors"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="size-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="12" y1="5" x2="12" y2="19"></line>
          <line x1="5" y1="12" x2="19" y2="12"></line>
        </svg>
      </button>
    </div>
  </div>
</div>

<script>
  document.addEventListener('astro:page-load', () => {
    const zoomIn = document.getElementById('zoom-in')
    const zoomOut = document.getElementById('zoom-out')
    const zoomInContainer = document.getElementById('zoom-in-container')
    const zoomOutContainer = document.getElementById('zoom-out-container')
    
    // Handle zoom button clicks
    if (zoomIn) {
      zoomIn.addEventListener('click', () => {
        window.dispatchEvent(new CustomEvent('map:zoom-in'))
      })
    }
    
    if (zoomOut) {
      zoomOut.addEventListener('click', () => {
        window.dispatchEvent(new CustomEvent('map:zoom-out'))
      })
    }

    // Handle zoom updates
    window.addEventListener('map:zoom-update', ((e: CustomEvent) => {
      const { currentZoom, minZoom, maxZoom } = e.detail

      // Show/hide zoom out button
      if (zoomOutContainer) {
        zoomOutContainer.classList.toggle('hidden', currentZoom <= minZoom)
      }

      // Show/hide zoom in button
      if (zoomInContainer) {
        zoomInContainer.classList.toggle('hidden', currentZoom >= maxZoom)
      }
    }) as EventListener)
  })
</script> 